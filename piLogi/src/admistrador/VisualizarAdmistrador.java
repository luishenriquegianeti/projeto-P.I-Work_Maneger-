package admistrador;

import DAO.CadastroAdmistradorDAO;

import DAO.CadastroClientesDAO;
import DTO.CadastroAdmistradorDTO;
import P.I.VisualizarClientes;
import Prestador.VisualizarPrestadores;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Henrique Gianet
 */
public class VisualizarAdmistrador extends javax.swing.JFrame {

    /**
     * Creates new form VisualizarClientes
     */
    public VisualizarAdmistrador() {
        initComponents();
        ListarValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAdmistrador = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pesquisar = new javax.swing.JButton();
        Mudar_tela = new javax.swing.JButton();
        txtPesquisar = new javax.swing.JTextField();
        Excluir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaAdmistrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Nome", "Email", "Senha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaAdmistrador);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 1137, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("tabela Admistrador ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 71, 499, -1));

        pesquisar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(pesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 162, 43));

        Mudar_tela.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Mudar_tela.setText("Alterar");
        Mudar_tela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mudar_telaActionPerformed(evt);
            }
        });
        jPanel1.add(Mudar_tela, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 150, 40));
        jPanel1.add(txtPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 140, 40));

        Excluir.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(Excluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 190, 130, 40));

        jButton1.setText("Clientes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jButton3.setText("Prestador");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
       String nomePesquisar = txtPesquisar.getText().trim();

try {
    CadastroAdmistradorDAO objDAO = new CadastroAdmistradorDAO();
    DefaultTableModel model = (DefaultTableModel) tabelaAdmistrador.getModel();
    model.setNumRows(0);

    ArrayList<CadastroAdmistradorDTO> lista;

    if (nomePesquisar.isEmpty()) {
        // Mostra todos os clientes
        lista = objDAO.pesquisarAdmistrador(); // Método que busca todos
    } else {
        // Filtra pelo nome digitado
        lista = objDAO.pesquisarAdmistradoresPorNome(nomePesquisar);
    }

    for (CadastroAdmistradorDTO Admistrador : lista) {
        model.addRow(new Object[]{
            Admistrador.getIdClientes(),
            Admistrador.getNome(),
            Admistrador.getEmail(),
            Admistrador.getSenha()
        });
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erro ao pesquisar: " + e.getMessage());
}

        
    }//GEN-LAST:event_pesquisarActionPerformed

    private void Mudar_telaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mudar_telaActionPerformed
                                       
    int setar = tabelaAdmistrador.getSelectedRow();
    
    if (setar >= 0) {
        String id = tabelaAdmistrador.getModel().getValueAt(setar, 0).toString();
        String nome = tabelaAdmistrador.getModel().getValueAt(setar, 1).toString();
        String email = tabelaAdmistrador.getModel().getValueAt(setar, 2).toString();
        String senha = tabelaAdmistrador.getModel().getValueAt(setar, 3).toString();
        
        TelaEditarAdmistrador cadastro = new TelaEditarAdmistrador();
        cadastro.setDados(id, nome, email, senha);
        cadastro.setVisible(true);
        this.setVisible(false); 
    } else {
        JOptionPane.showMessageDialog(null, "Selecione uma linha para carregar os dados.");
    }


    }//GEN-LAST:event_Mudar_telaActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
int linhaSelecionada = tabelaAdmistrador.getSelectedRow();

    if (linhaSelecionada >= 0) {
        int confirm = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir este Admistrador?", "Confirmação", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
           
            int id = Integer.parseInt(tabelaAdmistrador.getModel().getValueAt(linhaSelecionada, 0).toString());

            try {
                CadastroClientesDAO dao = new CadastroClientesDAO();
                dao.excluirCliente(id);
                JOptionPane.showMessageDialog(null, "Admistrador excluído com sucesso!");
                ListarValores(); 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao excluir Admistrador: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Selecione um Admistrador para excluir.");
    }


    }//GEN-LAST:event_ExcluirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        VisualizarClientes objcli2 = new VisualizarClientes();
        objcli2.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        VisualizarPrestadores objcli2 = new VisualizarPrestadores();
        objcli2.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     *
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizarAdmistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizarAdmistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizarAdmistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizarAdmistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualizarAdmistrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Mudar_tela;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pesquisar;
    private javax.swing.JTable tabelaAdmistrador;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables

    private void ListarValores(){
    try {
        CadastroAdmistradorDAO objCadastroAdmistradorDAO = new CadastroAdmistradorDAO();
        
        DefaultTableModel model = (DefaultTableModel) tabelaAdmistrador.getModel();
        model.setNumRows(0);
        
        ArrayList<CadastroAdmistradorDTO> lista = objCadastroAdmistradorDAO.pesquisarAdmistrador();
        
        for (int num = 0; num < lista.size(); num++) {
            CadastroAdmistradorDTO admistrador = lista.get(num);
            model.addRow(new Object[]{
                admistrador.getidadmistrador(),
                admistrador.getNome(),
                admistrador.getEmail(),
                admistrador.getSenha()
            });
        }
        
    } catch (Exception erro) {
        JOptionPane.showMessageDialog(null, "Listar valores VisualizarAdmistrador: " + erro);
    }
}


  

    
}


